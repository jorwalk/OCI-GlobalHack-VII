{"version":3,"sources":["public/src/client/chats/messages.js"],"names":["define","components","sounds","translator","Benchpress","messages","sendMessage","roomId","inputEl","msg","val","mid","attr","length","ajaxify","data","maximumChatMessageLength","app","alertError","removeAttr","updateRemainingLength","parent","$","window","trigger","message","socket","emit","err","showEmailConfirmWarning","alert","alert_id","title","type","timeout","play","element","find","text","config","appendChatMessage","chatContentEl","lastSpeaker","parseInt","last","lasttimestamp","Array","isArray","newSet","fromuid","timestamp","parseMessage","html","onMessagesParsed","newMessage","appendTo","timeago","addClass","scrollToBottom","messageEl","callback","parse","translate","containerEl","scrollTop","scrollHeight","height","prepEdit","messageId","raw","onChatMessageEdit","on","forEach","self","user","uid","body","get","replaceWith","delete","translated","bootbox","confirm","ok","toggleClass","restore"],"mappings":"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","file":"public/src/client/chats/messages.js","sourcesContent":["'use strict';\n\n\ndefine('forum/chats/messages', ['components', 'sounds', 'translator', 'benchpress'], function (components, sounds, translator, Benchpress) {\n\tvar messages = {};\n\n\tmessages.sendMessage = function (roomId, inputEl) {\n\t\tvar msg = inputEl.val();\n\t\tvar mid = inputEl.attr('data-mid');\n\n\t\tif (msg.length > ajaxify.data.maximumChatMessageLength) {\n\t\t\treturn app.alertError('[[error:chat-message-too-long,' + ajaxify.data.maximumChatMessageLength + ']]');\n\t\t}\n\n\t\tif (!msg.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tinputEl.val('');\n\t\tinputEl.removeAttr('data-mid');\n\t\tmessages.updateRemainingLength(inputEl.parent());\n\t\t$(window).trigger('action:chat.sent', {\n\t\t\troomId: roomId,\n\t\t\tmessage: msg,\n\t\t\tmid: mid,\n\t\t});\n\n\t\tif (!mid) {\n\t\t\tsocket.emit('modules.chats.send', {\n\t\t\t\troomId: roomId,\n\t\t\t\tmessage: msg,\n\t\t\t}, function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\tinputEl.val(msg);\n\t\t\t\t\tmessages.updateRemainingLength(inputEl.parent());\n\t\t\t\t\tif (err.message === '[[error:email-not-confirmed-chat]]') {\n\t\t\t\t\t\treturn app.showEmailConfirmWarning(err);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn app.alert({\n\t\t\t\t\t\talert_id: 'chat_spam_error',\n\t\t\t\t\t\ttitle: '[[global:alert.error]]',\n\t\t\t\t\t\tmessage: err.message,\n\t\t\t\t\t\ttype: 'danger',\n\t\t\t\t\t\ttimeout: 10000,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tsounds.play('chat-outgoing');\n\t\t\t});\n\t\t} else {\n\t\t\tsocket.emit('modules.chats.edit', {\n\t\t\t\troomId: roomId,\n\t\t\t\tmid: mid,\n\t\t\t\tmessage: msg,\n\t\t\t}, function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\tinputEl.val(msg);\n\t\t\t\t\tinputEl.attr('data-mid', mid);\n\t\t\t\t\tmessages.updateRemainingLength(inputEl.parent());\n\t\t\t\t\treturn app.alertError(err.message);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\tmessages.updateRemainingLength = function (parent) {\n\t\tvar element = parent.find('[component=\"chat/input\"]');\n\t\tparent.find('[component=\"chat/message/length\"]').text(element.val().length);\n\t\tparent.find('[component=\"chat/message/remaining\"]').text(config.maximumChatMessageLength - element.val().length);\n\t};\n\n\tmessages.appendChatMessage = function (chatContentEl, data) {\n\t\tvar lastSpeaker = parseInt(chatContentEl.find('.chat-message').last().attr('data-uid'), 10);\n\t\tvar lasttimestamp = parseInt(chatContentEl.find('.chat-message').last().attr('data-timestamp'), 10);\n\t\tif (!Array.isArray(data)) {\n\t\t\tdata.newSet = lastSpeaker !== parseInt(data.fromuid, 10) ||\n\t\t\t\tparseInt(data.timestamp, 10) > parseInt(lasttimestamp, 10) + (1000 * 60 * 3);\n\t\t}\n\n\t\tmessages.parseMessage(data, function (html) {\n\t\t\tonMessagesParsed(chatContentEl, html);\n\t\t});\n\t};\n\n\tfunction onMessagesParsed(chatContentEl, html) {\n\t\tvar newMessage = $(html);\n\n\t\tnewMessage.appendTo(chatContentEl);\n\t\tnewMessage.find('.timeago').timeago();\n\t\tnewMessage.find('img:not(.not-responsive)').addClass('img-responsive');\n\t\tmessages.scrollToBottom(chatContentEl);\n\n\t\t$(window).trigger('action:chat.received', {\n\t\t\tmessageEl: newMessage,\n\t\t});\n\t}\n\n\n\tmessages.parseMessage = function (data, callback) {\n\t\tBenchpress.parse('partials/chats/message' + (Array.isArray(data) ? 's' : ''), {\n\t\t\tmessages: data,\n\t\t}, function (html) {\n\t\t\ttranslator.translate(html, callback);\n\t\t});\n\t};\n\n\n\tmessages.scrollToBottom = function (containerEl) {\n\t\tif (containerEl.length) {\n\t\t\tcontainerEl.scrollTop(containerEl[0].scrollHeight - containerEl.height());\n\t\t}\n\t};\n\n\tmessages.prepEdit = function (inputEl, messageId, roomId) {\n\t\tsocket.emit('modules.chats.getRaw', { mid: messageId, roomId: roomId }, function (err, raw) {\n\t\t\tif (err) {\n\t\t\t\treturn app.alertError(err.message);\n\t\t\t}\n\t\t\t// Populate the input field with the raw message content\n\t\t\tif (inputEl.val().length === 0) {\n\t\t\t\t// By setting the `data-mid` attribute, I tell the chat code that I am editing a\n\t\t\t\t// message, instead of posting a new one.\n\t\t\t\tinputEl.attr('data-mid', messageId).addClass('editing');\n\t\t\t\tinputEl.val(raw);\n\t\t\t}\n\t\t});\n\t};\n\n\tmessages.onChatMessageEdit = function () {\n\t\tsocket.on('event:chats.edit', function (data) {\n\t\t\tdata.messages.forEach(function (message) {\n\t\t\t\tvar self = parseInt(message.fromuid, 10) === parseInt(app.user.uid, 10);\n\t\t\t\tmessage.self = self ? 1 : 0;\n\t\t\t\tmessages.parseMessage(message, function (html) {\n\t\t\t\t\tvar body = components.get('chat/message', message.messageId);\n\t\t\t\t\tif (body.length) {\n\t\t\t\t\t\tbody.replaceWith(html);\n\t\t\t\t\t\tcomponents.get('chat/message', message.messageId).find('.timeago').timeago();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n\n\tmessages.delete = function (messageId, roomId) {\n\t\ttranslator.translate('[[modules:chat.delete_message_confirm]]', function (translated) {\n\t\t\tbootbox.confirm(translated, function (ok) {\n\t\t\t\tif (!ok) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tsocket.emit('modules.chats.delete', {\n\t\t\t\t\tmessageId: messageId,\n\t\t\t\t\troomId: roomId,\n\t\t\t\t}, function (err) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn app.alertError(err.message);\n\t\t\t\t\t}\n\n\t\t\t\t\tcomponents.get('chat/message', messageId).toggleClass('deleted', true);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n\n\tmessages.restore = function (messageId, roomId) {\n\t\tsocket.emit('modules.chats.restore', {\n\t\t\tmessageId: messageId,\n\t\t\troomId: roomId,\n\t\t}, function (err) {\n\t\t\tif (err) {\n\t\t\t\treturn app.alertError(err.message);\n\t\t\t}\n\n\t\t\tcomponents.get('chat/message', messageId).toggleClass('deleted', false);\n\t\t});\n\t};\n\n\treturn messages;\n});\n"]}